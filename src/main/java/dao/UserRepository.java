package dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import dao.mappers.IMapResultSetToEntity;
import dao.uow.IUnitOfWork;
import dao.uow.IUnitOfWorkRepository;
import domain.User;
import domain.EnumerationValue;

public class UserRepository extends RepositoryBase<User>
	implements IUserRepository{

	public UserRepository(Connection connection,
			IMapResultSetToEntity<User> mapper,
			IUnitOfWork uow) {
		super(connection, mapper, uow);
	}
	
	protected void setUpdateQuery(User u) throws SQLException {
		update.setString(1, u.getLogin());
		update.setString(2, u.getPassword());
		update.setInt(3, u.getId());
	}
	
	protected void setInsertQuery(User u) throws SQLException {
		insert.setString(1, u.getLogin());
		insert.setString(2, u.getPassword());
	}
	
	@Override
	protected String tableName() {
		return "t_sys_users";
	}
	@Override
	protected String createTableSql() {
		return 
				"CREATE TABLE t_sys_users("
						+ "id bigint GENERATED BY DEFAULT AS IDENTITY,"
						+ "login VARCHAR(50),"
						+ "password VARCHAR(50)"			
						+ ")";
	}
	@Override
	protected String insertSql() {
		return 
				"INSERT INTO "
				+ "t_sys_users(login, password)"
				+ " VALUES (?,?)";
	}
	@Override
	protected String updateSql() {
		return "UPDATE t_sys_users SET login = ?, password = ? WHERE id = ?";
		
	}

	public List<User> withLogin(String login) {

		return null;
	}
	
	public List<User> withLoginAndPassword(String login, String password) {

		return null;
	}
	
	public List<User> setupPermissions(User user) {

		return null;
	}
	
}
